doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Login & Registration Forms
    style.
      *::before, *::after,* {
        box-sizing: border-box;
      }
      body {
        font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, 'Helvetica Neue', sans-serif;
        background-color: #f5f5f5;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 10px 0;
      }
      .container {
        display: flex;
        height: 100%;
        flex-direction: column;
        align-items: center;
      }
      .form-container {
        background-color: #fff;
        padding: 20px;
        margin: 10px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        width: 300px;
      }
      form h2 {
        margin-bottom: 20px;
        font-size: 24px;
        text-align: center;
      }
      label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
      }
      input {
        width: 100%;
        padding: 10px;
        margin-bottom: 20px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }
      button,a {
        width: 100%;
        padding: 10px;
        background-color: #28a745;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
      }
      button:hover {
        background-color: #218838;
      }
      a{
        text-decoration: none;
      }

  body
    .container
      if typeof username !== 'undefined'
        .form-container
          h2 Hola #{username}!
          p Estas en el panel de administración
          button#close-session Cerrar sesión
      else
        .form-container
          form#login-form
            h2 Login
            label(for="login-username") Email
            input#login-username(type="text" name="email" required)
            label(for="login-password") Password
            input#login-password(type="text" name="password" required)
            button(type="submit") Login
            br
            br
            button(id="login" type="button") GOOGLE
            span

        .form-container
          form#register-form
            h2 Register
            label(for="register-username") Email
            input#register-username(type="text" name="email" required)
            label(for="register-password") Password
            input#register-password(type="text" name="password" required)
            label(for="register-confirm-password") Confirm Password
            input#register-confirm-password(type="text" name="confirm-password" required)
            button(type="submit") Register
            br
            br
            //- a(href="/api/auth/register-google") GOOGLE            
            button(id="register" type="button") GOOGLE
            span

    script.
      const $ = (el) => document.querySelector(el);
      const loginForm = $('#login-form');
      const loginSpan = $('#login-form span');
      const registerForm = $('#register-form');
      const registerSpan = $('#register-form span');
      const logoutButton = $('#close-session');

      loginForm?.addEventListener('submit', (e) => {
        e.preventDefault();
        const email = $('#login-username').value;
        const password = $('#login-password').value;
        fetch('/api/auth/login', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email, password, username:"Generic" }),
        }).then((res)=>{
          console.log(res)
          return res.json()})
        .then((res) => {
          console.log(res)
          if (res.error) {throw res.error}
            loginSpan.innerText = 'Sesión iniciada... Entrando...';
            loginSpan.style.color = 'green';
            //- setTimeout(() => {
            //-   window.location.href = '/api/auth/protected';
            //- }, 2000);
            //- } else {
            //-   loginSpan.innerText = 'Error al iniciar sesión';
            //-   loginSpan.style.color = 'red';
            //- }
        }).catch(error=>{
          console.log(error);
          loginSpan.innerText = 'Error al iniciar sesión';
          loginSpan.style.color = 'red';
        });
      });

      registerForm?.addEventListener('submit', (e) => {
        e.preventDefault();
        const email = $('#register-username').value;
        const password = $('#register-password').value;
        const confirmPassword = $('#register-confirm-password').value;
        if (password !== confirmPassword) {
          alert('Passwords do not match');
          return;
        }
        fetch('/api/auth/register', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email, password, username:`Generic ${Date.now()}`}),
        }).then((res)=>{
          console.log(res)
          return res.json()})
        .then((res) => {
          if (res.error) {throw res.error}
            registerSpan.innerText = 'Usuario registrado. Entrando...';
            registerSpan.style.color = 'green';
        }).catch(error=>{
          console.log(error);
          registerSpan.innerText = 'Error al registrar usuario';
          registerSpan.style.color = 'red';
        });
      });

      logoutButton?.addEventListener('click', (e) => {
        e.preventDefault();
        fetch('/api/auth/logout', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
        })
        .then((res) => {
          window.location.href = '/';
        });
      });
      const loggin = document.getElementById("login");
      const register = document.getElementById("register");
      let popup;
      loggin.addEventListener("click", () => {
        popup = window.open("/api/auth/google/login", "Login", "width=500,height=600");
      });

      register.addEventListener("click", () => {
        popup = window.open("/api/auth/google/register", "Register", "width=500,height=600");
      });

      window.addEventListener(
        "message",
        (event) => {
        if (event.origin === "https://dbd5-2806-104e-3-6574-4b6-9d71-7990-ee3.ngrok-free.app" && (["Login" , "Register"].includes(event.source?.name) || ["Login" , "Register"].includes(event.data?.source))) {
          console.log(event.data)
          !event.data?.authFail && (window.location.reload())
        };

      },
      false,
      );